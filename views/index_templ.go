// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"video_convertor/views/components"
)

func Index() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Header().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<head><style>\n                /* Style for server response container */\n                #response {\n                    background-color: #f3f4f6;\n                    padding: 10px;\n                    border-radius: 5px;\n                    border: 1px solid #d2d6dc;\n                    margin-top: 6px;\n                    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n                    font-family: 'Arial', sans-serif;\n                    color: #333;\n                }\n            </style></head><body><main class=\"min-h-screen w-full flex flex-col justify-center items-center\"><div class=\"w-full max-w-xl mt-6 flex flex-col justify-center items-center\"><!-- File Upload Form --><form hx-post=\"/upload\" hx-encoding=\"multipart/form-data\" hx-target=\"#response\" hx-trigger=\"submit\" hx-swap=\"innerHTML\" class=\"w-full max-w-sm\"><label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"video\">Select a Video File</label> <input type=\"file\" name=\"video\" class=\"shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\" accept=\"video/*\" required> <label class=\"block text-gray-700 text-sm font-bold mb-2 mt-4\" for=\"quality\">Quality Level:</label> <select name=\"quality\" class=\"shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\" required><option disabled selected value>-- choose an option -- </option> <option value=\"fhd\">FHD</option> <option value=\"hd\">HD</option> <option value=\"sd\">SD</option></select> <button class=\"py-1 px-4 w-full h-10 rounded-lg text-white bg-zinc-800 mt-4\">Upload</button></form><!-- Display the server response --><div id=\"response\" class=\"w-full max-w-sm mt-6 bg-gray-100 p-4 rounded-lg shadow-md\"><p>After successfully uploading your video file, it will undergo conversion. Once the conversion process is complete and your video is ready, you will be able to download the converted file from the given address.</p></div></div></main></body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</html><script>\n        function reloadPage() {\n            setTimeout(function() {\n                window.location.reload();\n            }, 2000);\n        }\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
