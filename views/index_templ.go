// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"video_convertor/views/components"
)

func Index() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Header().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<head></head><body class=\"antialiased font-inter bg-blue-50 min-h-screen flex items-center justify-center\"><div class=\"w-full max-w-xl mx-auto space-y-6 sm:space-y-8\"><section aria-labelledby=\"form-heading\"><h2 id=\"form-heading\" class=\"text-center text-3xl font-extrabold text-gray-900\">Convert Your Videos Easily</h2><!-- File Upload Form --><form hx-post=\"/upload\" hx-encoding=\"multipart/form-data\" hx-target=\"#response\" hx-trigger=\"submit\" hx-swap=\"innerHTML\" class=\"w-full max-w-sm mx-auto mt-10 space-y-6\"><fieldset><legend class=\"sr-only\">Video Information</legend><div class=\"space-y-2 relative\"><label class=\"block text-sm font-semibold leading-6 text-gray-900\" for=\"video\">Video File</label> <input type=\"file\" name=\"video\" class=\"shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\" accept=\"video/*\" required></div><div class=\"space-y-2 relative\"><label class=\"block text-sm font-semibold leading-6 text-gray-900\" for=\"quality\">Quality Level</label> <select name=\"quality\" class=\"shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\" required><option disabled selected value>-- choose an option -- </option> <option value=\"fhd\">FHD</option> <option value=\"hd\">HD</option> <option value=\"sd\">SD</option></select></div></fieldset><button class=\"block w-full py-3 px-5 rounded-lg text-white bg-indigo-600 hover:bg-indigo-500 active:bg-indigo-400 transition duration-150 ease-in-out\">Convert & Download</button><!-- Display the server response --><div id=\"response\" class=\"my-6 rounded-lg bg-neutral-200 p-4 shadow ring-1 ring-black ring-opacity-5\"><p class=\"font-arial text-slate-700\">After successfully uploading your video file, it will undergo conversion. Once the conversion process is complete and your video is ready, you will be able to download the converted file from the given address.</p></div></form></section></div></body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</html><script>\n        function reloadPage() {\n            setTimeout(function() {\n                window.location.reload();\n            }, 2000);\n        }\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
